{"version":3,"file":"Co0bzkjB.js","sources":["../../../../node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue"],"sourcesContent":["<script>\nimport { defineComponent, watch, h, useSlots } from \"vue\";\nimport ContentRendererMarkdown from \"./ContentRendererMarkdown.vue\";\nexport default defineComponent({\n  name: \"ContentRenderer\",\n  props: {\n    /**\n     * The document to render.\n     */\n    value: {\n      type: Object,\n      required: false,\n      default: () => ({})\n    },\n    /**\n     * Whether or not to render the excerpt.\n     * @default false\n     */\n    excerpt: {\n      type: Boolean,\n      default: false\n    },\n    /**\n     * The tag to use for the renderer element if it is used.\n     * @default 'div'\n     */\n    tag: {\n      type: String,\n      default: \"div\"\n    }\n  },\n  setup(props) {\n    watch(\n      () => props.excerpt,\n      (newExcerpt) => {\n        if (newExcerpt && !props.value?.excerpt) {\n          console.warn(`No excerpt found for document content/${props?.value?._path}.${props?.value?._extension}!`);\n          console.warn(\"Make sure to use <!--more--> in your content if you want to use excerpt feature.\");\n        }\n      },\n      {\n        immediate: true\n      }\n    );\n  },\n  /**\n   * Content empty fallback\n   * @slot empty\n   */\n  render(ctx) {\n    const slots = useSlots();\n    const { value, excerpt, tag } = ctx;\n    const markdownAST = excerpt ? value?.excerpt : value?.body;\n    if (!markdownAST?.children?.length && slots?.empty) {\n      return slots.empty({ value, excerpt, tag, ...this.$attrs });\n    }\n    if (slots?.default) {\n      return slots.default({ value, excerpt, tag, ...this.$attrs });\n    }\n    if (markdownAST?.type === \"root\" && markdownAST?.children?.length) {\n      return h(\n        ContentRendererMarkdown,\n        {\n          value,\n          excerpt,\n          tag,\n          ...this.$attrs\n        }\n      );\n    }\n    return h(\n      \"pre\",\n      null,\n      JSON.stringify({ message: \"You should use slots with <ContentRenderer>\", value, excerpt, tag }, null, 2)\n    );\n  }\n});\n</script>\n"],"names":["_sfc_main","defineComponent","props","watch","newExcerpt","_a","_b","_c","ctx","slots","useSlots","value","excerpt","tag","markdownAST","h","ContentRendererMarkdown"],"mappings":"+GAGA,MAAAA,EAAAC,EAAA,CACA,KAAA,kBACA,MAAA,CAIA,MAAA,CACA,KAAA,OACA,SAAA,GACA,QAAA,KAAA,CAAA,EACA,EAKA,QAAA,CACA,KAAA,QACA,QAAA,EACA,EAKA,IAAA,CACA,KAAA,OACA,QAAA,KACA,CACA,EACA,MAAAC,EAAA,CACAC,EACA,IAAAD,EAAA,QACAE,GAAA,WACAA,GAAA,GAAAC,EAAAH,EAAA,QAAA,MAAAG,EAAA,WACA,QAAA,KAAA,0CAAAC,EAAAJ,GAAA,YAAAA,EAAA,QAAA,YAAAI,EAAA,KAAA,KAAAC,EAAAL,GAAA,YAAAA,EAAA,QAAA,YAAAK,EAAA,UAAA,GAAA,EACA,QAAA,KAAA,kFAAA,EAEA,EACA,CACA,UAAA,EACA,CACA,CACA,EAKA,OAAAC,EAAA,SACA,MAAAC,EAAAC,EAAA,EACA,CAAA,MAAAC,EAAA,QAAAC,EAAA,IAAAC,CAAA,EAAAL,EACAM,EAAAF,EAAAD,GAAA,YAAAA,EAAA,QAAAA,GAAA,YAAAA,EAAA,KACA,MAAA,GAAAN,EAAAS,GAAA,YAAAA,EAAA,WAAA,MAAAT,EAAA,UAAAI,GAAA,MAAAA,EAAA,OACAA,EAAA,MAAA,CAAA,MAAAE,EAAA,QAAAC,EAAA,IAAAC,EAAA,GAAA,KAAA,OAAA,EAEAJ,GAAA,MAAAA,EAAA,QACAA,EAAA,QAAA,CAAA,MAAAE,EAAA,QAAAC,EAAA,IAAAC,EAAA,GAAA,KAAA,OAAA,GAEAC,GAAA,YAAAA,EAAA,QAAA,UAAAR,EAAAQ,GAAA,YAAAA,EAAA,WAAA,MAAAR,EAAA,QACAS,EACAC,EACA,CACA,MAAAL,EACA,QAAAC,EACA,IAAAC,EACA,GAAA,KAAA,MACA,CACA,EAEAE,EACA,MACA,KACA,KAAA,UAAA,CAAA,QAAA,8CAAA,MAAAJ,EAAA,QAAAC,EAAA,IAAAC,GAAA,KAAA,CAAA,CACA,CACA,CACA,CAAA","x_google_ignoreList":[0]}