{"version":3,"file":"CpUzK5Md.js","sources":["../../../../node_modules/@nuxt/content/dist/runtime/components/ContentNavigation.vue"],"sourcesContent":["<script>\nimport { toRefs, defineComponent, h, useSlots, computed } from \"vue\";\nimport { hash } from \"ohash\";\nimport { useAsyncData, fetchContentNavigation, useState, useContent } from \"#imports\";\nimport { NuxtLink } from \"#components\";\nconst ContentNavigation = defineComponent({\n  name: \"ContentNavigation\",\n  props: {\n    /**\n     * A query to be passed to `fetchContentNavigation()`.\n     */\n    query: {\n      type: Object,\n      required: false,\n      default: void 0\n    }\n  },\n  async setup(props) {\n    const {\n      query\n    } = toRefs(props);\n    const queryBuilder = computed(() => {\n      if (typeof query.value?.params === \"function\") {\n        return query.value.params();\n      }\n      return query.value;\n    });\n    if (!queryBuilder.value && useState(\"dd-navigation\").value) {\n      const { navigation: navigation2 } = useContent();\n      return { navigation: navigation2 };\n    }\n    const { data: navigation } = await useAsyncData(\n      `content-navigation-${hash(queryBuilder.value)}`,\n      () => fetchContentNavigation(queryBuilder.value)\n    );\n    return { navigation };\n  },\n  /**\n   * Navigation empty fallback\n   * @slot empty\n   */\n  render(ctx) {\n    const slots = useSlots();\n    const { navigation } = ctx;\n    const renderLink = (link) => h(NuxtLink, { to: link._path }, () => link.title);\n    const renderLinks = (data, level) => h(\n      \"ul\",\n      level ? { \"data-level\": level } : null,\n      data.map((link) => {\n        if (link.children) {\n          return h(\"li\", null, [renderLink(link), renderLinks(link.children, level + 1)]);\n        }\n        return h(\"li\", null, renderLink(link));\n      })\n    );\n    const defaultNode = (data) => renderLinks(data, 0);\n    return slots?.default ? slots.default({ navigation, ...this.$attrs }) : defaultNode(navigation);\n  }\n});\nexport default ContentNavigation;\n</script>\n"],"names":["ContentNavigation","defineComponent","props","query","toRefs","queryBuilder","computed","_a","useState","navigation2","useContent","navigation","useAsyncData","hash","fetchContentNavigation","ctx","slots","useSlots","renderLink","link","h","NuxtLink","renderLinks","data","level","defaultNode","_sfc_main"],"mappings":"wGAKA,MAAAA,EAAAC,EAAA,CACA,KAAA,oBACA,MAAA,CAIA,MAAA,CACA,KAAA,OACA,SAAA,GACA,QAAA,MACA,CACA,EACA,MAAA,MAAAC,EAAA,CACA,KAAA,CACA,MAAAC,CACA,EAAAC,EAAAF,CAAA,EACAG,EAAAC,EAAA,IAAA,OACA,OAAA,QAAAC,EAAAJ,EAAA,QAAA,YAAAI,EAAA,SAAA,WACAJ,EAAA,MAAA,SAEAA,EAAA,KACA,CAAA,EACA,GAAA,CAAAE,EAAA,OAAAG,EAAA,eAAA,EAAA,MAAA,CACA,KAAA,CAAA,WAAAC,CAAA,EAAAC,EAAA,EACA,MAAA,CAAA,WAAAD,EACA,CACA,KAAA,CAAA,KAAAE,CAAA,EAAA,MAAAC,EACA,sBAAAC,EAAAR,EAAA,KAAA,CAAA,GACA,IAAAS,EAAAT,EAAA,KAAA,GAEA,MAAA,CAAA,WAAAM,EACA,EAKA,OAAAI,EAAA,CACA,MAAAC,EAAAC,IACA,CAAA,WAAAN,GAAAI,EACAG,EAAAC,GAAAC,EAAAC,EAAA,CAAA,GAAAF,EAAA,KAAA,EAAA,IAAAA,EAAA,KAAA,EACAG,EAAA,CAAAC,EAAAC,IAAAJ,EACA,KACAI,EAAA,CAAA,aAAAA,CAAA,EAAA,KACAD,EAAA,IAAAJ,GACAA,EAAA,SACAC,EAAA,KAAA,KAAA,CAAAF,EAAAC,CAAA,EAAAG,EAAAH,EAAA,SAAAK,EAAA,CAAA,CAAA,CAAA,EAEAJ,EAAA,KAAA,KAAAF,EAAAC,CAAA,CAAA,CACA,GAEAM,EAAAF,GAAAD,EAAAC,EAAA,CAAA,EACA,OAAAP,GAAA,MAAAA,EAAA,QAAAA,EAAA,QAAA,CAAA,WAAAL,EAAA,GAAA,KAAA,MAAA,CAAA,EAAAc,EAAAd,CAAA,CACA,CACA,CAAA,EACAe,EAAA1B","x_google_ignoreList":[0]}